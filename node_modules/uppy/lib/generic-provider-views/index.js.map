{"version":3,"sources":["../../src/generic-provider-views/index.js"],"names":["AuthView","require","Browser","LoaderView","Utils","module","exports","plugin","opts","Provider","id","defaultOptions","viewType","updateFolderState","bind","addFile","filterItems","filterQuery","toggleSearch","getFolder","getNextFolder","logout","checkAuth","handleAuth","handleDemoAuth","sortByTitle","sortByDate","isActiveRow","isChecked","toggleCheckbox","handleError","handleScroll","donePicking","core","on","render","tearDown","off","_updateFilesAndFolders","res","files","folders","getItemSubList","forEach","item","isFolder","push","setPluginState","checkAuthInProgress","then","authenticated","onAuth","catch","err","name","_loaderWrapper","list","updatedDirectories","state","getPluginState","index","directories","findIndex","dir","slice","concat","title","getItemName","folder","getItemRequestPath","lastCheckbox","undefined","file","isCheckbox","tagFile","source","data","getItemData","getItemId","type","getMimeType","isRemote","body","fileId","remote","host","url","fileUrl","getFileType","fileType","isPreviewSupported","preview","getItemThumbnailUrl","log","location","href","json","ok","newState","e","filterInput","target","value","searchInputEl","document","querySelector","isSearchVisible","focus","items","filter","toLowerCase","indexOf","sorting","sortedFiles","sort","fileA","fileB","localeCompare","sortedFolders","folderA","folderB","a","Date","getItemModifiedDate","b","sortBySize","length","size","activeRow","itemId","providerFileToId","selectedFolders","getState","addFolder","folderId","loading","dashboard","getPlugin","message","i18n","smart_count","info","removeFolder","removeFile","i","splice","stopPropagation","preventDefault","itemsToToggle","shiftKey","prevIndex","currentIndex","generateFileID","urlId","Math","floor","random","redirect","search","authState","btoa","JSON","stringify","link","authUrl","authWindow","window","open","authWindowUrl","DOMException","TypeError","setTimeout","split","close","error","toString","details","scrollPos","scrollHeight","scrollTop","offsetHeight","path","getNextPagePath","_isHandlingScroll","hideAllPanels","promise","catch_","pluginName","demo","browserProps","getItemIcon","done"],"mappings":"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","file":"index.js","sourcesContent":["const AuthView = require('./AuthView')\nconst Browser = require('./Browser')\nconst LoaderView = require('./Loader')\nconst Utils = require('../core/Utils')\n\n/**\n * Class to easily generate generic views for plugins\n *\n * This class expects the plugin using to have the following attributes\n *\n * stateId {String} object key of which the plugin state is stored\n *\n * This class also expects the plugin instance using it to have the following\n * accessor methods.\n * Each method takes the item whose property is to be accessed\n * as a param\n *\n * isFolder\n *    @return {Boolean} for if the item is a folder or not\n * getItemData\n *    @return {Object} that is format ready for uppy upload/download\n * getItemIcon\n *    @return {Object} html instance of the item's icon\n * getItemSubList\n *    @return {Array} sub-items in the item. e.g a folder may contain sub-items\n * getItemName\n *    @return {String} display friendly name of the item\n * getMimeType\n *    @return {String} mime type of the item\n * getItemId\n *    @return {String} unique id of the item\n * getItemRequestPath\n *    @return {String} unique request path of the item when making calls to uppy server\n * getItemModifiedDate\n *    @return {object} or {String} date of when last the item was modified\n * getItemThumbnailUrl\n *    @return {String}\n */\nmodule.exports = class View {\n  /**\n   * @param {object} instance of the plugin\n   */\n  constructor (plugin, opts) {\n    this.plugin = plugin\n    this.Provider = plugin[plugin.id]\n\n    // set default options\n    const defaultOptions = {\n      viewType: 'list'\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    // Logic\n    this.updateFolderState = this.updateFolderState.bind(this)\n    this.addFile = this.addFile.bind(this)\n    this.filterItems = this.filterItems.bind(this)\n    this.filterQuery = this.filterQuery.bind(this)\n    this.toggleSearch = this.toggleSearch.bind(this)\n    this.getFolder = this.getFolder.bind(this)\n    this.getNextFolder = this.getNextFolder.bind(this)\n    this.logout = this.logout.bind(this)\n    this.checkAuth = this.checkAuth.bind(this)\n    this.handleAuth = this.handleAuth.bind(this)\n    this.handleDemoAuth = this.handleDemoAuth.bind(this)\n    this.sortByTitle = this.sortByTitle.bind(this)\n    this.sortByDate = this.sortByDate.bind(this)\n    this.isActiveRow = this.isActiveRow.bind(this)\n    this.isChecked = this.isChecked.bind(this)\n    this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    this.handleError = this.handleError.bind(this)\n    this.handleScroll = this.handleScroll.bind(this)\n    this.donePicking = this.donePicking.bind(this)\n\n    this.plugin.core.on('core:file-removed', this.updateFolderState)\n\n    // Visual\n    this.render = this.render.bind(this)\n  }\n\n  tearDown () {\n    this.plugin.core.off('core:file-removed', this.updateFolderState)\n  }\n\n  _updateFilesAndFolders (res, files, folders) {\n    this.plugin.getItemSubList(res).forEach((item) => {\n      if (this.plugin.isFolder(item)) {\n        folders.push(item)\n      } else {\n        files.push(item)\n      }\n    })\n\n    this.plugin.setPluginState({ folders, files })\n  }\n\n  checkAuth () {\n    this.plugin.setPluginState({ checkAuthInProgress: true })\n    this.Provider.checkAuth()\n      .then((authenticated) => {\n        this.plugin.setPluginState({ checkAuthInProgress: false })\n        this.plugin.onAuth(authenticated)\n      })\n      .catch((err) => {\n        this.plugin.setPluginState({ checkAuthInProgress: false })\n        this.handleError(err)\n      })\n  }\n\n  /**\n   * Based on folder ID, fetch a new folder and update it to state\n   * @param  {String} id Folder id\n   * @return {Promise}   Folders/files in folder\n   */\n  getFolder (id, name) {\n    return this._loaderWrapper(\n      this.Provider.list(id),\n      (res) => {\n        let folders = []\n        let files = []\n        let updatedDirectories\n\n        const state = this.plugin.getPluginState()\n        const index = state.directories.findIndex((dir) => id === dir.id)\n\n        if (index !== -1) {\n          updatedDirectories = state.directories.slice(0, index + 1)\n        } else {\n          updatedDirectories = state.directories.concat([{id, title: name || this.plugin.getItemName(res)}])\n        }\n\n        this._updateFilesAndFolders(res, files, folders)\n        this.plugin.setPluginState({ directories: updatedDirectories })\n      },\n      this.handleError)\n  }\n\n  /**\n   * Fetches new folder\n   * @param  {Object} Folder\n   * @param  {String} title Folder title\n   */\n  getNextFolder (folder) {\n    let id = this.plugin.getItemRequestPath(folder)\n    this.getFolder(id, this.plugin.getItemName(folder))\n    this.lastCheckbox = undefined\n  }\n\n  addFile (file, isCheckbox = false) {\n    const tagFile = {\n      source: this.plugin.id,\n      data: this.plugin.getItemData(file),\n      name: this.plugin.getItemName(file) || this.plugin.getItemId(file),\n      type: this.plugin.getMimeType(file),\n      isRemote: true,\n      body: {\n        fileId: this.plugin.getItemId(file)\n      },\n      remote: {\n        host: this.plugin.opts.host,\n        url: `${this.Provider.fileUrl(this.plugin.getItemRequestPath(file))}`,\n        body: {\n          fileId: this.plugin.getItemId(file)\n        }\n      }\n    }\n\n    Utils.getFileType(tagFile).then(fileType => {\n      if (fileType && Utils.isPreviewSupported(fileType)) {\n        tagFile.preview = this.plugin.getItemThumbnailUrl(file)\n      }\n      this.plugin.core.log('Adding remote file')\n      this.plugin.core.addFile(tagFile)\n      if (!isCheckbox) {\n        this.donePicking()\n      }\n    })\n  }\n\n  /**\n   * Removes session token on client side.\n   */\n  logout () {\n    this.Provider.logout(location.href)\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.ok) {\n          const newState = {\n            authenticated: false,\n            files: [],\n            folders: [],\n            directories: []\n          }\n          this.plugin.setPluginState(newState)\n        }\n      }).catch(this.handleError)\n  }\n\n  filterQuery (e) {\n    const state = this.plugin.getPluginState()\n    this.plugin.setPluginState(Object.assign({}, state, {\n      filterInput: e.target.value\n    }))\n  }\n\n  toggleSearch () {\n    const state = this.plugin.getPluginState()\n    const searchInputEl = document.querySelector('.Browser-searchInput')\n\n    this.plugin.setPluginState(Object.assign({}, state, {\n      isSearchVisible: !state.isSearchVisible,\n      filterInput: ''\n    }))\n\n    searchInputEl.value = ''\n    if (!state.isSearchVisible) {\n      searchInputEl.focus()\n    }\n  }\n\n  filterItems (items) {\n    const state = this.plugin.getPluginState()\n    return items.filter((folder) => {\n      return this.plugin.getItemName(folder).toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1\n    })\n  }\n\n  sortByTitle () {\n    const state = Object.assign({}, this.plugin.getPluginState())\n    const {files, folders, sorting} = state\n\n    let sortedFiles = files.sort((fileA, fileB) => {\n      if (sorting === 'titleDescending') {\n        return this.plugin.getItemName(fileB).localeCompare(this.plugin.getItemName(fileA))\n      }\n      return this.plugin.getItemName(fileA).localeCompare(this.plugin.getItemName(fileB))\n    })\n\n    let sortedFolders = folders.sort((folderA, folderB) => {\n      if (sorting === 'titleDescending') {\n        return this.plugin.getItemName(folderB).localeCompare(this.plugin.getItemName(folderA))\n      }\n      return this.plugin.getItemName(folderA).localeCompare(this.plugin.getItemName(folderB))\n    })\n\n    this.plugin.setPluginState(Object.assign({}, state, {\n      files: sortedFiles,\n      folders: sortedFolders,\n      sorting: (sorting === 'titleDescending') ? 'titleAscending' : 'titleDescending'\n    }))\n  }\n\n  sortByDate () {\n    const state = Object.assign({}, this.plugin.getPluginState())\n    const {files, folders, sorting} = state\n\n    let sortedFiles = files.sort((fileA, fileB) => {\n      let a = new Date(this.plugin.getItemModifiedDate(fileA))\n      let b = new Date(this.plugin.getItemModifiedDate(fileB))\n\n      if (sorting === 'dateDescending') {\n        return a > b ? -1 : a < b ? 1 : 0\n      }\n      return a > b ? 1 : a < b ? -1 : 0\n    })\n\n    let sortedFolders = folders.sort((folderA, folderB) => {\n      let a = new Date(this.plugin.getItemModifiedDate(folderA))\n      let b = new Date(this.plugin.getItemModifiedDate(folderB))\n\n      if (sorting === 'dateDescending') {\n        return a > b ? -1 : a < b ? 1 : 0\n      }\n\n      return a > b ? 1 : a < b ? -1 : 0\n    })\n\n    this.plugin.setPluginState(Object.assign({}, state, {\n      files: sortedFiles,\n      folders: sortedFolders,\n      sorting: (sorting === 'dateDescending') ? 'dateAscending' : 'dateDescending'\n    }))\n  }\n\n  sortBySize () {\n    const state = Object.assign({}, this.plugin.getPluginState())\n    const {files, sorting} = state\n\n    // check that plugin supports file sizes\n    if (!files.length || !this.plugin.getItemData(files[0]).size) {\n      return\n    }\n\n    let sortedFiles = files.sort((fileA, fileB) => {\n      let a = this.plugin.getItemData(fileA).size\n      let b = this.plugin.getItemData(fileB).size\n\n      if (sorting === 'sizeDescending') {\n        return a > b ? -1 : a < b ? 1 : 0\n      }\n      return a > b ? 1 : a < b ? -1 : 0\n    })\n\n    this.plugin.setPluginState(Object.assign({}, state, {\n      files: sortedFiles,\n      sorting: (sorting === 'sizeDescending') ? 'sizeAscending' : 'sizeDescending'\n    }))\n  }\n\n  isActiveRow (file) {\n    return this.plugin.getPluginState().activeRow === this.plugin.getItemId(file)\n  }\n\n  isChecked (item) {\n    const itemId = this.providerFileToId(item)\n    if (this.plugin.isFolder(item)) {\n      const state = this.plugin.getPluginState()\n      const folders = state.selectedFolders || {}\n      if (itemId in folders) {\n        return folders[itemId]\n      }\n      return false\n    }\n    return (itemId in this.plugin.core.getState().files)\n  }\n\n  /**\n   * Adds all files found inside of specified folder.\n   *\n   * Uses separated state while folder contents are being fetched and\n   * mantains list of selected folders, which are separated from files.\n   */\n  addFolder (folder) {\n    const folderId = this.providerFileToId(folder)\n    let state = this.plugin.getPluginState()\n    let folders = state.selectedFolders || {}\n    if (folderId in folders && folders[folderId].loading) {\n      return\n    }\n    folders[folderId] = {loading: true, files: []}\n    this.plugin.setPluginState({selectedFolders: folders})\n    this.Provider.list(this.plugin.getItemRequestPath(folder)).then((res) => {\n      let files = []\n      this.plugin.getItemSubList(res).forEach((item) => {\n        if (!this.plugin.isFolder(item)) {\n          this.addFile(item, true)\n          files.push(this.providerFileToId(item))\n        }\n      })\n      state = this.plugin.getPluginState()\n      state.selectedFolders[folderId] = {loading: false, files: files}\n      this.plugin.setPluginState({selectedFolders: folders})\n      const dashboard = this.plugin.core.getPlugin('Dashboard')\n      let message\n      if (files.length) {\n        message = dashboard.i18n('folderAdded', {\n          smart_count: files.length, folder: this.plugin.getItemName(folder)\n        })\n      } else {\n        message = dashboard.i18n('emptyFolderAdded')\n      }\n      this.plugin.core.info(message)\n    }).catch((e) => {\n      state = this.plugin.getPluginState()\n      delete state.selectedFolders[folderId]\n      this.plugin.setPluginState({selectedFolders: state.selectedFolders})\n      this.handleError(e)\n    })\n  }\n\n  removeFolder (folderId) {\n    let state = this.plugin.getPluginState()\n    let folders = state.selectedFolders || {}\n    if (!(folderId in folders)) {\n      return\n    }\n    let folder = folders[folderId]\n    if (folder.loading) {\n      return\n    }\n    // deepcopy the files before iteration because the\n    // original array constantly gets mutated during\n    // the iteration by updateFolderState as each file\n    // is removed and 'core:file-removed' is emitted.\n    const files = folder.files.concat([])\n    for (const fileId of files) {\n      if (fileId in this.plugin.core.getState().files) {\n        this.plugin.core.removeFile(fileId)\n      }\n    }\n    delete folders[folderId]\n    this.plugin.setPluginState({selectedFolders: folders})\n  }\n\n  /**\n   * Updates selected folders state everytime file is being removed.\n   *\n   * Note that this is only important when files are getting removed from the\n   * main screen, and will do nothing when you uncheck folder directly, since\n   * it's already been done in removeFolder method.\n   */\n  updateFolderState (fileId) {\n    let state = this.plugin.getPluginState()\n    let folders = state.selectedFolders || {}\n    for (let folderId in folders) {\n      let folder = folders[folderId]\n      if (folder.loading) {\n        continue\n      }\n      let i = folder.files.indexOf(fileId)\n      if (i > -1) {\n        folder.files.splice(i, 1)\n      }\n      if (!folder.files.length) {\n        delete folders[folderId]\n      }\n    }\n    this.plugin.setPluginState({selectedFolders: folders})\n  }\n\n  /**\n   * Toggles file/folder checkbox to on/off state while updating files list.\n   *\n   * Note that some extra complexity comes from supporting shift+click to\n   * toggle multiple checkboxes at once, which is done by getting all files\n   * in between last checked file and current one, and applying an on/off state\n   * for all of them, depending on current file state.\n   */\n  toggleCheckbox (e, file) {\n    e.stopPropagation()\n    e.preventDefault()\n    let { folders, files, filterInput } = this.plugin.getPluginState()\n    let items = folders.concat(files)\n    if (filterInput !== '') {\n      items = this.filterItems(items)\n    }\n    let itemsToToggle = [file]\n    if (this.lastCheckbox && e.shiftKey) {\n      let prevIndex = items.indexOf(this.lastCheckbox)\n      let currentIndex = items.indexOf(file)\n      if (prevIndex < currentIndex) {\n        itemsToToggle = items.slice(prevIndex, currentIndex + 1)\n      } else {\n        itemsToToggle = items.slice(currentIndex, prevIndex + 1)\n      }\n    }\n    this.lastCheckbox = file\n    if (this.isChecked(file)) {\n      for (let item of itemsToToggle) {\n        const itemId = this.providerFileToId(item)\n        if (this.plugin.isFolder(item)) {\n          this.removeFolder(itemId)\n        } else {\n          if (itemId in this.plugin.core.getState().files) {\n            this.plugin.core.removeFile(itemId)\n          }\n        }\n      }\n    } else {\n      for (let item of itemsToToggle) {\n        if (this.plugin.isFolder(item)) {\n          this.addFolder(item)\n        } else {\n          this.addFile(item, true)\n        }\n      }\n    }\n  }\n\n  providerFileToId (file) {\n    return Utils.generateFileID({\n      data: this.plugin.getItemData(file),\n      name: this.plugin.getItemName(file) || this.plugin.getItemId(file),\n      type: this.plugin.getMimeType(file)\n    })\n  }\n\n  handleDemoAuth () {\n    const state = this.plugin.getPluginState()\n    this.plugin.setPluginState({}, state, {\n      authenticated: true\n    })\n  }\n\n  handleAuth () {\n    const urlId = Math.floor(Math.random() * 999999) + 1\n    const redirect = `${location.href}${location.search ? '&' : '?'}id=${urlId}`\n\n    const authState = btoa(JSON.stringify({ redirect }))\n    const link = `${this.Provider.authUrl()}?state=${authState}`\n\n    const authWindow = window.open(link, '_blank')\n    const checkAuth = () => {\n      let authWindowUrl\n\n      try {\n        authWindowUrl = authWindow.location.href\n      } catch (e) {\n        if (e instanceof DOMException || e instanceof TypeError) {\n          return setTimeout(checkAuth, 100)\n        } else throw e\n      }\n\n      // split url because chrome adds '#' to redirects\n      if (authWindowUrl && authWindowUrl.split('#')[0] === redirect) {\n        authWindow.close()\n        this._loaderWrapper(this.Provider.checkAuth(), this.plugin.onAuth, this.handleError)\n      } else {\n        setTimeout(checkAuth, 100)\n      }\n    }\n\n    checkAuth()\n  }\n\n  handleError (error) {\n    const core = this.plugin.core\n    const message = core.i18n('uppyServerError')\n    core.log(error.toString())\n    core.info({message: message, details: error.toString()}, 'error', 5000)\n  }\n\n  handleScroll (e) {\n    const scrollPos = e.target.scrollHeight - (e.target.scrollTop + e.target.offsetHeight)\n    const path = this.plugin.getNextPagePath ? this.plugin.getNextPagePath() : null\n\n    if (scrollPos < 50 && path && !this._isHandlingScroll) {\n      this.Provider.list(path)\n        .then((res) => {\n          const { files, folders } = this.plugin.getPluginState()\n          this._updateFilesAndFolders(res, files, folders)\n        }).catch(this.handleError)\n        .then(() => { this._isHandlingScroll = false }) // always called\n\n      this._isHandlingScroll = true\n    }\n  }\n\n  donePicking () {\n    const dashboard = this.plugin.core.getPlugin('Dashboard')\n    if (dashboard) dashboard.hideAllPanels()\n  }\n\n  // displays loader view while asynchronous request is being made.\n  _loaderWrapper (promise, then, catch_) {\n    promise\n      .then(then).catch(catch_)\n      .then(() => this.plugin.setPluginState({ loading: false })) // always called.\n    this.plugin.setPluginState({ loading: true })\n  }\n\n  render (state) {\n    const { authenticated, checkAuthInProgress, loading } = this.plugin.getPluginState()\n\n    if (loading) {\n      return LoaderView()\n    }\n\n    if (!authenticated) {\n      return AuthView({\n        pluginName: this.plugin.title,\n        demo: this.plugin.opts.demo,\n        checkAuth: this.checkAuth,\n        handleAuth: this.handleAuth,\n        handleDemoAuth: this.handleDemoAuth,\n        checkAuthInProgress: checkAuthInProgress\n      })\n    }\n\n    const browserProps = Object.assign({}, this.plugin.getPluginState(), {\n      getNextFolder: this.getNextFolder,\n      getFolder: this.getFolder,\n      addFile: this.addFile,\n      filterItems: this.filterItems,\n      filterQuery: this.filterQuery,\n      toggleSearch: this.toggleSearch,\n      sortByTitle: this.sortByTitle,\n      sortByDate: this.sortByDate,\n      logout: this.logout,\n      demo: this.plugin.opts.demo,\n      isActiveRow: this.isActiveRow,\n      isChecked: this.isChecked,\n      toggleCheckbox: this.toggleCheckbox,\n      getItemName: this.plugin.getItemName,\n      getItemIcon: this.plugin.getItemIcon,\n      handleScroll: this.handleScroll,\n      done: this.donePicking,\n      title: this.plugin.title,\n      viewType: this.opts.viewType\n    })\n\n    return Browser(browserProps)\n  }\n}\n"]}