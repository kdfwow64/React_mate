{"version":3,"sources":["../../../src/plugins/GoogleDrive/index.js"],"names":["Plugin","require","Provider","View","module","exports","core","opts","type","id","title","icon","host","provider","authProvider","files","onAuth","bind","render","defaultOptions","install","view","setPluginState","authenticated","folders","directories","activeRow","filterInput","isSearchVisible","target","mount","uninstall","tearDown","unmount","getFolder","isFolder","item","mimeType","getItemData","size","parseFloat","fileSize","getItemIcon","iconLink","getItemSubList","items","filter","i","startsWith","getItemName","getMimeType","getItemId","getItemRequestPath","getItemModifiedDate","modifiedByMeDate","getItemThumbnailUrl","GoogleDrive","state"],"mappings":"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","file":"index.js","sourcesContent":["const html = require('yo-yo')\nconst Plugin = require('../Plugin')\n\nconst Provider = require('../../Provider')\n\nconst View = require('../../generic-provider-views')\n\nmodule.exports = class GoogleDrive extends Plugin {\n  constructor (core, opts) {\n    super(core, opts)\n    this.type = 'acquirer'\n    this.id = this.opts.id || 'GoogleDrive'\n    this.title = 'Google Drive'\n    this.icon = () => html`\n      <svg aria-hidden=\"true\" class=\"UppyIcon UppyModalTab-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 16 16\">\n        <path d=\"M2.955 14.93l2.667-4.62H16l-2.667 4.62H2.955zm2.378-4.62l-2.666 4.62L0 10.31l5.19-8.99 2.666 4.62-2.523 4.37zm10.523-.25h-5.333l-5.19-8.99h5.334l5.19 8.99z\"/>\n      </svg>\n    `\n\n    // writing out the key explicitly for readability the key used to store\n    // the provider instance must be equal to this.id.\n    this[this.id] = new Provider(core, {\n      host: this.opts.host,\n      provider: 'drive',\n      authProvider: 'google'\n    })\n\n    this.files = []\n\n    this.onAuth = this.onAuth.bind(this)\n    // Visual\n    this.render = this.render.bind(this)\n\n    // set default options\n    const defaultOptions = {}\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n  }\n\n  install () {\n    this.view = new View(this)\n    // Set default state for Google Drive\n    this.setPluginState({\n      authenticated: false,\n      files: [],\n      folders: [],\n      directories: [],\n      activeRow: -1,\n      filterInput: '',\n      isSearchVisible: false\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.view.tearDown()\n    this.unmount()\n  }\n\n  onAuth (authenticated) {\n    this.setPluginState({ authenticated })\n    if (authenticated) {\n      this.view.getFolder('root')\n    }\n  }\n\n  isFolder (item) {\n    return item.mimeType === 'application/vnd.google-apps.folder'\n  }\n\n  getItemData (item) {\n    return Object.assign({}, item, {size: parseFloat(item.fileSize)})\n  }\n\n  getItemIcon (item) {\n    return html`<img src=${item.iconLink}/>`\n  }\n\n  getItemSubList (item) {\n    return item.items.filter((i) => {\n      return this.isFolder(i) || !i.mimeType.startsWith('application/vnd.google')\n    })\n  }\n\n  getItemName (item) {\n    return item.title ? item.title : '/'\n  }\n\n  getMimeType (item) {\n    return item.mimeType\n  }\n\n  getItemId (item) {\n    return item.id\n  }\n\n  getItemRequestPath (item) {\n    return this.getItemId(item)\n  }\n\n  getItemModifiedDate (item) {\n    return item.modifiedByMeDate\n  }\n\n  getItemThumbnailUrl (item) {\n    return `${this.opts.host}/${this.GoogleDrive.id}/thumbnail/${this.getItemRequestPath(item)}`\n  }\n\n  render (state) {\n    return this.view.render(state)\n  }\n}\n"]}