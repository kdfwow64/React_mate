{"version":3,"sources":["../../../src/plugins/Dashboard/Dashboard.js"],"names":["FileList","require","Tabs","FileCard","isTouchDevice","toArray","closeIcon","module","exports","Dashboard","props","handleInputChange","ev","preventDefault","files","target","forEach","file","addFile","source","id","name","type","data","handlePaste","clipboardData","items","kind","blob","getAsFile","log","info","renderInnerPanel","i18n","activePanel","hideAllPanels","getPlugin","render","state","inline","modal","isHidden","semiTransparent","isWide","handleClickOutside","updateDashboardElWidth","maxWidth","maxHeight","closeModal","acquirers","panelSelectorPrefix","showPanel","fileCardFor","done","fileCardDone","metaFields","showFileCard","showProgressDetails","totalProgress","totalFileCount","note","removeFile","pauseAll","resumeAll","pauseUpload","startUpload","cancelUpload","retryUpload","resumableUploads","progressindicators","map"],"mappings":"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","file":"Dashboard.js","sourcesContent":["const html = require('yo-yo')\nconst FileList = require('./FileList')\nconst Tabs = require('./Tabs')\nconst FileCard = require('./FileCard')\n// const UploadBtn = require('./UploadBtn')\nconst { isTouchDevice, toArray } = require('../../core/Utils')\nconst { closeIcon } = require('./icons')\n\n// http://dev.edenspiekermann.com/2016/02/11/introducing-accessible-modal-dialog\n// https://github.com/ghosh/micromodal\n\nmodule.exports = function Dashboard (props) {\n  function handleInputChange (ev) {\n    ev.preventDefault()\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      props.addFile({\n        source: props.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      })\n    })\n  }\n\n  // @TODO Exprimental, work in progress\n  // no names, weird API, Chrome-only http://stackoverflow.com/a/22940020\n  function handlePaste (ev) {\n    ev.preventDefault()\n\n    const files = toArray(ev.clipboardData.items)\n    files.forEach((file) => {\n      if (file.kind !== 'file') return\n\n      const blob = file.getAsFile()\n      if (!blob) {\n        props.log('[Dashboard] File pasted, but the file blob is empty')\n        props.info('Error pasting file', 'error')\n        return\n      }\n      props.log('[Dashboard] File pasted')\n      props.addFile({\n        source: props.id,\n        name: file.name,\n        type: file.type,\n        data: blob\n      })\n    })\n  }\n\n  const renderInnerPanel = (props) => {\n    return html`<div style=\"width: 100%; height: 100%;\">\n          <div class=\"UppyDashboardContent-bar\">\n          <h2 class=\"UppyDashboardContent-title\">\n            ${props.i18n('importFrom')} ${props.activePanel ? props.activePanel.name : null}\n          </h2>\n          <button class=\"UppyDashboardContent-back\"\n                type=\"button\"\n                onclick=${props.hideAllPanels}>${props.i18n('done')}</button>\n        </div>\n        ${props.getPlugin(props.activePanel.id).render(props.state)}\n    </div>`\n  }\n\n  return html`\n    <div class=\"Uppy UppyTheme--default UppyDashboard\n                          ${isTouchDevice() ? 'Uppy--isTouchDevice' : ''}\n                          ${props.semiTransparent ? 'UppyDashboard--semiTransparent' : ''}\n                          ${!props.inline ? 'UppyDashboard--modal' : ''}\n                          ${props.isWide ? 'UppyDashboard--wide' : ''}\"\n          aria-hidden=\"${props.inline ? 'false' : props.modal.isHidden}\"\n          aria-label=\"${!props.inline\n                       ? props.i18n('dashboardWindowTitle')\n                       : props.i18n('dashboardTitle')}\"\n          onpaste=${handlePaste}>\n\n    <div class=\"UppyDashboard-overlay\" tabindex=\"-1\" onclick=${props.handleClickOutside}></div>\n\n    <div class=\"UppyDashboard-inner\"\n         aria-modal=\"true\"\n         role=\"dialog\"\n         style=\"\n          ${props.inline && props.maxWidth ? `max-width: ${props.maxWidth}px;` : ''}\n          ${props.inline && props.maxHeight ? `max-height: ${props.maxHeight}px;` : ''}\"\n         onload=${() => props.updateDashboardElWidth()}>\n      <button class=\"UppyDashboard-close\"\n              type=\"button\"\n              aria-label=\"${props.i18n('closeModal')}\"\n              title=\"${props.i18n('closeModal')}\"\n              onclick=${props.closeModal}>${closeIcon()}</button>\n\n      <div class=\"UppyDashboard-innerWrap\">\n\n        ${Tabs({\n          files: props.files,\n          handleInputChange: handleInputChange,\n          acquirers: props.acquirers,\n          panelSelectorPrefix: props.panelSelectorPrefix,\n          showPanel: props.showPanel,\n          i18n: props.i18n\n        })}\n\n        ${FileCard({\n          files: props.files,\n          fileCardFor: props.fileCardFor,\n          done: props.fileCardDone,\n          metaFields: props.metaFields,\n          log: props.log,\n          i18n: props.i18n\n        })}\n\n        <div class=\"UppyDashboard-filesContainer\">\n\n          ${FileList({\n            acquirers: props.acquirers,\n            files: props.files,\n            handleInputChange: handleInputChange,\n            showFileCard: props.showFileCard,\n            showProgressDetails: props.showProgressDetails,\n            totalProgress: props.totalProgress,\n            totalFileCount: props.totalFileCount,\n            info: props.info,\n            note: props.note,\n            i18n: props.i18n,\n            log: props.log,\n            removeFile: props.removeFile,\n            pauseAll: props.pauseAll,\n            resumeAll: props.resumeAll,\n            pauseUpload: props.pauseUpload,\n            startUpload: props.startUpload,\n            cancelUpload: props.cancelUpload,\n            retryUpload: props.retryUpload,\n            resumableUploads: props.resumableUploads,\n            isWide: props.isWide\n          })}\n\n        </div>\n\n        <div class=\"UppyDashboardContent-panel\"\n             role=\"tabpanel\"\n             aria-hidden=\"${props.activePanel ? 'false' : 'true'}\">\n         ${props.activePanel ? renderInnerPanel(props) : ''}\n        </div>\n\n        <div class=\"UppyDashboard-progressindicators\">\n          ${props.progressindicators.map((target) => {\n            return props.getPlugin(target.id).render(props.state)\n          })}\n        </div>\n\n      </div>\n    </div>\n  </div>\n  `\n}\n\n// <div class=\"UppyDashboard-actions\">\n// ${!props.hideUploadButton && !props.autoProceed && props.newFiles.length > 0\n//  ? UploadBtn({\n//    i18n: props.i18n,\n//    startUpload: props.startUpload,\n//    newFileCount: props.newFiles.length\n//  })\n//  : null\n// }\n// </div>\n"]}