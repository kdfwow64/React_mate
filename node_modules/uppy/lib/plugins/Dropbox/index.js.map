{"version":3,"sources":["../../../src/plugins/Dropbox/index.js"],"names":["Plugin","require","Provider","View","icons","module","exports","core","opts","type","id","title","icon","host","provider","files","onAuth","bind","render","defaultOptions","install","view","setPluginState","authenticated","folders","directories","activeRow","filterInput","isSearchVisible","target","mount","uninstall","tearDown","unmount","getFolder","isFolder","item","getItemData","getItemIcon","getItemSubList","entries","getItemName","name","getMimeType","getItemId","getItemRequestPath","encodeURIComponent","path_lower","getItemModifiedDate","server_modified","getItemThumbnailUrl","Dropbox","state"],"mappings":"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","file":"index.js","sourcesContent":["const html = require('yo-yo')\nconst Plugin = require('../Plugin')\n\nconst Provider = require('../../Provider')\n\nconst View = require('../../generic-provider-views')\nconst icons = require('./icons')\n\nmodule.exports = class Dropbox extends Plugin {\n  constructor (core, opts) {\n    super(core, opts)\n    this.type = 'acquirer'\n    this.id = this.opts.id || 'Dropbox'\n    this.title = 'Dropbox'\n    this.icon = () => html`\n      <svg class=\"UppyIcon\" width=\"128\" height=\"118\" viewBox=\"0 0 128 118\">\n        <path d=\"M38.145.777L1.108 24.96l25.608 20.507 37.344-23.06z\"/>\n        <path d=\"M1.108 65.975l37.037 24.183L64.06 68.525l-37.343-23.06zM64.06 68.525l25.917 21.633 37.036-24.183-25.61-20.51z\"/>\n        <path d=\"M127.014 24.96L89.977.776 64.06 22.407l37.345 23.06zM64.136 73.18l-25.99 21.567-11.122-7.262v8.142l37.112 22.256 37.114-22.256v-8.142l-11.12 7.262z\"/>\n      </svg>\n    `\n\n    // writing out the key explicitly for readability the key used to store\n    // the provider instance must be equal to this.id.\n    this[this.id] = new Provider(core, {\n      host: this.opts.host,\n      provider: 'dropbox'\n    })\n\n    this.files = []\n\n    this.onAuth = this.onAuth.bind(this)\n\n    this.render = this.render.bind(this)\n\n    // set default options\n    const defaultOptions = {}\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n  }\n\n  install () {\n    this.view = new View(this)\n    // Set default state\n    this.setPluginState({\n      authenticated: false,\n      files: [],\n      folders: [],\n      directories: [],\n      activeRow: -1,\n      filterInput: '',\n      isSearchVisible: false\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.view.tearDown()\n    this.unmount()\n  }\n\n  onAuth (authenticated) {\n    this.setPluginState({ authenticated })\n    if (authenticated) {\n      this.view.getFolder()\n    }\n  }\n\n  isFolder (item) {\n    return item['.tag'] === 'folder'\n  }\n\n  getItemData (item) {\n    return item\n  }\n\n  getItemIcon (item) {\n    return icons[item['.tag']]()\n  }\n\n  getItemSubList (item) {\n    return item.entries\n  }\n\n  getItemName (item) {\n    return item.name || ''\n  }\n\n  getMimeType (item) {\n    // mime types aren't supported.\n    return null\n  }\n\n  getItemId (item) {\n    return item.id\n  }\n\n  getItemRequestPath (item) {\n    return encodeURIComponent(item.path_lower)\n  }\n\n  getItemModifiedDate (item) {\n    return item.server_modified\n  }\n\n  getItemThumbnailUrl (item) {\n    return `${this.opts.host}/${this.Dropbox.id}/thumbnail/${this.getItemRequestPath(item)}`\n  }\n\n  render (state) {\n    return this.view.render(state)\n  }\n}\n"]}